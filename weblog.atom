<?xml version="1.0" encoding="UTF-8"?><feed xmlns="http://www.w3.org/2005/Atom">
  <title>zephyrtronium</title>
  <id>https://zephyrtronium.github.io/</id>
  <updated>2024-04-30T20:50:15-05:00</updated>
  <subtitle>correct opinions about types, go, capital letters, &amp;c.</subtitle>
  <link href="https://zephyrtronium.github.io/"></link>
  <author>
    <name>zephyrtronium</name>
    <email>zephyrtronium@hey.com</email>
  </author>
  <entry>
    <title>Choosing RWMutex</title>
    <updated>2021-03-24T11:00:00Z</updated>
    <id>https://zephyrtronium.github.io/articles/rwmutex.html</id>
    <link href="https://zephyrtronium.github.io/articles/rwmutex.html" rel="alternate"></link>
    <summary type="html">You need to maximize throughput in a concurrent algorithm. Will an RWMutex help?</summary>
    <author>
      <name>zephyrtronium</name>
      <email>zephyrtronium@hey.com</email>
    </author>
  </entry>
  <entry>
    <title>Sync Map, Reconstructed</title>
    <updated>2021-04-13T11:00:00Z</updated>
    <id>https://zephyrtronium.github.io/articles/syncmap.html</id>
    <link href="https://zephyrtronium.github.io/articles/syncmap.html" rel="alternate"></link>
    <summary type="html">Where does sync.Map actually fit? Let&#39;s rebuild it from scratch to find out!</summary>
    <author>
      <name>zephyrtronium</name>
      <email>zephyrtronium@hey.com</email>
    </author>
  </entry>
  <entry>
    <title>JSON Constructors</title>
    <updated>2023-12-23T11:00:00Z</updated>
    <id>https://zephyrtronium.github.io/articles/unmarshal-validation.html</id>
    <link href="https://zephyrtronium.github.io/articles/unmarshal-validation.html" rel="alternate"></link>
    <summary type="html">Combining some obscure features of Go lets us ensure we never decode invalid objects, keeping our APIs and systems safe.</summary>
    <author>
      <name>zephyrtronium</name>
      <email>zephyrtronium@hey.com</email>
    </author>
  </entry>
  <entry>
    <title>Static Assert in Go</title>
    <updated>2024-02-11T11:00:00Z</updated>
    <id>https://zephyrtronium.github.io/articles/static-assert.html</id>
    <link href="https://zephyrtronium.github.io/articles/static-assert.html" rel="alternate"></link>
    <summary type="html">Make the compiler check your assumptions before any code runs.</summary>
    <author>
      <name>zephyrtronium</name>
      <email>zephyrtronium@hey.com</email>
    </author>
  </entry>
  <entry>
    <title>Thoughts on a Programming Language</title>
    <updated>2024-04-23T11:00:00Z</updated>
    <id>https://zephyrtronium.github.io/articles/lang.html</id>
    <link href="https://zephyrtronium.github.io/articles/lang.html" rel="alternate"></link>
    <summary type="html">A summary of design goals for the programming language I wish I were using.</summary>
    <author>
      <name>zephyrtronium</name>
      <email>zephyrtronium@hey.com</email>
    </author>
  </entry>
  <entry>
    <title>Subtype Polymorphism and RTTI</title>
    <updated>2024-04-23T11:00:00Z</updated>
    <id>https://zephyrtronium.github.io/articles/lang-subtypes.html</id>
    <link href="https://zephyrtronium.github.io/articles/lang-subtypes.html" rel="alternate"></link>
    <summary type="html">If we want to avoid RTTI, can we have subtype polymorphism?</summary>
    <author>
      <name>zephyrtronium</name>
      <email>zephyrtronium@hey.com</email>
    </author>
  </entry>
  <entry>
    <title>The Importance of Maybe</title>
    <updated>2024-04-24T11:00:00Z</updated>
    <id>https://zephyrtronium.github.io/articles/lang-maybe.html</id>
    <link href="https://zephyrtronium.github.io/articles/lang-maybe.html" rel="alternate"></link>
    <summary type="html">The Maybe or Option type is too important to relegate to the same syntax as other type constructors.</summary>
    <author>
      <name>zephyrtronium</name>
      <email>zephyrtronium@hey.com</email>
    </author>
  </entry>
  <entry>
    <title>Statically Typed Dynamic Scope</title>
    <updated>2024-04-25T11:00:00Z</updated>
    <id>https://zephyrtronium.github.io/articles/lang-dynamic-scope.html</id>
    <link href="https://zephyrtronium.github.io/articles/lang-dynamic-scope.html" rel="alternate"></link>
    <summary type="html">Dependency injection SOLVED?</summary>
    <author>
      <name>zephyrtronium</name>
      <email>zephyrtronium@hey.com</email>
    </author>
  </entry>
  <entry>
    <title>Encapsulation and Selection</title>
    <updated>2024-04-26T11:00:00Z</updated>
    <id>https://zephyrtronium.github.io/articles/lang-encapsulation.html</id>
    <link href="https://zephyrtronium.github.io/articles/lang-encapsulation.html" rel="alternate"></link>
    <summary type="html">Not just for OOP.</summary>
    <author>
      <name>zephyrtronium</name>
      <email>zephyrtronium@hey.com</email>
    </author>
  </entry>
  <entry>
    <title>Which Paradigm?</title>
    <updated>2024-04-27T11:00:00Z</updated>
    <id>https://zephyrtronium.github.io/articles/lang-paradigm.html</id>
    <link href="https://zephyrtronium.github.io/articles/lang-paradigm.html" rel="alternate"></link>
    <summary type="html">Or, Rust is not functional programming, no matter how many iterators you .map().filter().collect().</summary>
    <author>
      <name>zephyrtronium</name>
      <email>zephyrtronium@hey.com</email>
    </author>
  </entry>
  <entry>
    <title>Product Expressions</title>
    <updated>2024-04-28T11:00:00Z</updated>
    <id>https://zephyrtronium.github.io/articles/lang-products.html</id>
    <link href="https://zephyrtronium.github.io/articles/lang-products.html" rel="alternate"></link>
    <summary type="html">Unlocking hidden powers of structs and tuples.</summary>
    <author>
      <name>zephyrtronium</name>
      <email>zephyrtronium@hey.com</email>
    </author>
  </entry>
  <entry>
    <title>Pieces of Programs</title>
    <updated>2024-04-29T11:00:00Z</updated>
    <id>https://zephyrtronium.github.io/articles/lang-modules.html</id>
    <link href="https://zephyrtronium.github.io/articles/lang-modules.html" rel="alternate"></link>
    <summary type="html">On the mechanics of program modularization.</summary>
    <author>
      <name>zephyrtronium</name>
      <email>zephyrtronium@hey.com</email>
    </author>
  </entry>
  <entry>
    <title>Distributing Packages</title>
    <updated>2024-04-30T11:00:00Z</updated>
    <id>https://zephyrtronium.github.io/articles/lang-distribution.html</id>
    <link href="https://zephyrtronium.github.io/articles/lang-distribution.html" rel="alternate"></link>
    <summary type="html">I&#39;ve come up with the most sane and sustainable way to distribute packages.</summary>
    <author>
      <name>zephyrtronium</name>
      <email>zephyrtronium@hey.com</email>
    </author>
  </entry>
  <entry>
    <title>GitHub Copilot and License Restrictions</title>
    <updated>2021-07-03T11:00:00Z</updated>
    <id>https://zephyrtronium.github.io/articles/copilot.html</id>
    <link href="https://zephyrtronium.github.io/articles/copilot.html" rel="alternate"></link>
    <summary type="html">Implications of GitHub Copilot</summary>
    <author>
      <name>zephyrtronium</name>
      <email>zephyrtronium@hey.com</email>
    </author>
  </entry>
  <entry>
    <title>Constraints Aren&#39;t Enums</title>
    <updated>2021-12-05T11:00:00Z</updated>
    <id>https://zephyrtronium.github.io/articles/generics-enums.html</id>
    <link href="https://zephyrtronium.github.io/articles/generics-enums.html" rel="alternate"></link>
    <summary type="html">Go 1.18 still does not add sum types.</summary>
    <author>
      <name>zephyrtronium</name>
      <email>zephyrtronium@hey.com</email>
    </author>
  </entry>
  <entry>
    <title>StAtE OF tHe arT In RAnDomneSS</title>
    <updated>2023-09-02T11:00:00Z</updated>
    <id>https://zephyrtronium.github.io/articles/randomness.html</id>
    <link href="https://zephyrtronium.github.io/articles/randomness.html" rel="alternate"></link>
    <summary type="html">A tour of pseudorandom number generators. Extended notes for my GopherCon 2023 lightning talk.</summary>
    <author>
      <name>zephyrtronium</name>
      <email>zephyrtronium@hey.com</email>
    </author>
  </entry>
  <entry>
    <title>Bocchi the Example!</title>
    <updated>2023-12-24T11:00:00Z</updated>
    <id>https://zephyrtronium.github.io/articles/bocchi.html</id>
    <link href="https://zephyrtronium.github.io/articles/bocchi.html" rel="alternate"></link>
    <summary type="html">Unfoo your bar, baz.</summary>
    <author>
      <name>zephyrtronium</name>
      <email>zephyrtronium@hey.com</email>
    </author>
  </entry>
</feed>